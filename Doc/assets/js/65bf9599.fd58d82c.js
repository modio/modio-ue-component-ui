"use strict";(self.webpackChunkmodio_docs=self.webpackChunkmodio_docs||[]).push([[1228],{93674:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(74848),o=n(28453);n(27064),n(89236);const a={id:"ue-helpers",title:"Helper Functionality",slug:"/unreal/component-ui/helpers",custom_edit_url:"https://github.com/modio/modio-ue4-internal/tree/main/Plugins/ModioComponentUI/Doc/doc_root/en-us/component-ui/helpers.mdx"},i=void 0,l={id:"component-ui/ue-helpers",title:"Helper Functionality",description:"Subwidget component validators",source:"@site/public/en-us/component-ui/helpers.mdx",sourceDirName:"component-ui",slug:"/unreal/component-ui/helpers",permalink:"/unreal/component-ui/helpers",draft:!1,unlisted:!1,editUrl:"https://github.com/modio/modio-ue4-internal/tree/main/Plugins/ModioComponentUI/Doc/doc_root/en-us/component-ui/helpers.mdx",tags:[],version:"current",frontMatter:{id:"ue-helpers",title:"Helper Functionality",slug:"/unreal/component-ui/helpers",custom_edit_url:"https://github.com/modio/modio-ue4-internal/tree/main/Plugins/ModioComponentUI/Doc/doc_root/en-us/component-ui/helpers.mdx"},sidebar:"sidebar",previous:{title:"Localization",permalink:"/unreal/component-ui/localization"},next:{title:"Enable/Disable UGC",permalink:"/unreal/component-ui/enable-disable"}},s={},c=[{value:"Subwidget component validators",id:"subwidget-component-validators",level:2},{value:"Color references and property overrides",id:"color-references-and-property-overrides",level:2}];function d(e){const t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"subwidget-component-validators",children:"Subwidget component validators"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"UI/Components/ComponentHelpers.h"})," file provides a number of utility functions in the ",(0,r.jsx)(t.code,{children:"ModioUI"})," namespace to simplify validating that a valid subwidget is being returned from a getter function:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-cpp",children:"template<typename WidgetType = class UWidget, typename InterfaceType>\r\ninline WidgetType* GetInterfaceWidgetChecked(TScriptInterface<InterfaceType> TargetWidget);\r\n\r\ntemplate<typename WidgetType = class UWidget, typename InterfaceType>\r\ninline WidgetType* GetInterfaceWidgetAsDataSourceWidget(TScriptInterface<InterfaceType> TargetWidget);\n"})}),"\n",(0,r.jsx)(t.p,{children:"They can be easily invoked as part of a conditional:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-cpp",children:"if (UWidget* ImageWidget = ModioUI::GetInterfaceWidgetChecked(GetAvatarImageWidget()))\r\n{\r\n    // Make an interface call on ImageWidget using the interface type passed in to GetInterfaceWidgetChecked \r\n}\n"})}),"\n",(0,r.jsxs)(t.p,{children:["These functions use template deduction to infer the correct interface type from the ",(0,r.jsx)(t.code,{children:"TScriptInterface"})," object you pass in, and will perform a more extended check than ",(0,r.jsx)(t.code,{children:"TScriptInterface"})," normally does to accommodate pure Blueprint interface implementations as well. Using ",(0,r.jsx)(t.code,{children:"GetInterfaceWidgetChecked"})," will mean you do not need to perform additional safety checks before invoking an ",(0,r.jsx)(t.code,{children:"Execute_"})," method from an interface, which will normally throw an error if the target object does not in fact implement the required interface."]}),"\n",(0,r.jsx)(t.h2,{id:"color-references-and-property-overrides",children:"Color references and property overrides"}),"\n",(0,r.jsx)(t.p,{children:"While primarily intended as implementation details of our template UI implementation, the plugin also provides the following helper structs:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.code,{children:"FLinearColorRef"})})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["This struct is a simple name-based reference to a color defined in a data table, to help implement palette support in the default mod.io components and template design. The default implementation looks colors up by name in a data table at a fixed location, but this can be altered by editing the definition of ",(0,r.jsx)(t.code,{children:"ULinearColorRefLibrary::Resolve"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:(0,r.jsxs)(t.strong,{children:[(0,r.jsx)(t.code,{children:"FIntegerOverride"}),", ",(0,r.jsx)(t.code,{children:"FFloatOverride"}),", ",(0,r.jsx)(t.code,{children:"FTextOverride"}),", ",(0,r.jsx)(t.code,{children:"FInputActionOverride"}),", ",(0,r.jsx)(t.code,{children:"FClassPathOverride"})]})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["These are small helper classes to allow the default components to add properties at the Blueprint level which behave like they have an ",(0,r.jsx)(t.code,{children:"EditConditionToggle/EditConditionHides/EditConditionInline"})," applied to a relevant bool. They make it easier to provide instanced overrides to class properties in a way that makes it very unambiguous something's being overridden. As with ",(0,r.jsx)(t.code,{children:"FLinearColorRef"}),", each of these overrides has functional-style helpers defined in a Blueprint function library that avoid the need for divergent Blueprint logic based on an override being set, and simplify applying an override to a default value without having to add more conditional logic to your implementation."]}),"\n"]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},19365:(e,t,n)=>{n.d(t,{A:()=>i});n(96540);var r=n(18215);const o={tabItem:"tabItem_Ymn6"};var a=n(74848);function i(e){let{children:t,hidden:n,className:i}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,r.A)(o.tabItem,i),hidden:n,children:t})}},11470:(e,t,n)=>{n.d(t,{A:()=>w});var r=n(96540),o=n(18215),a=n(23104),i=n(56347),l=n(205),s=n(57485),c=n(31682),d=n(70679);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??function(e){return u(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:o}}=e;return{value:t,label:n,attributes:r,default:o}}))}(n);return function(e){const t=(0,c.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function h(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const o=(0,i.W6)(),a=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s.aZ)(a),(0,r.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(o.location.search);t.set(a,e),o.replace({...o.location,search:t.toString()})}),[a,o])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:o}=e,a=p(e),[i,s]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:a}))),[c,u]=m({queryString:n,groupId:o}),[f,b]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[o,a]=(0,d.Dv)(n);return[o,(0,r.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:o}),g=(()=>{const e=c??f;return h({value:e,tabValues:a})?e:null})();(0,l.A)((()=>{g&&s(g)}),[g]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),b(e)}),[u,b,a]),tabValues:a}}var b=n(92303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=n(74848);function x(e){let{className:t,block:n,selectedValue:r,selectValue:i,tabValues:l}=e;const s=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.a_)(),d=e=>{const t=e.currentTarget,n=s.indexOf(t),o=l[n].value;o!==r&&(c(t),i(o))},u=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=s.indexOf(e.currentTarget)+1;t=s[n]??s[0];break}case"ArrowLeft":{const n=s.indexOf(e.currentTarget)-1;t=s[n]??s[s.length-1];break}}t?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":n},t),children:l.map((e=>{let{value:t,label:n,attributes:a}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,ref:e=>s.push(e),onKeyDown:u,onClick:d,...a,className:(0,o.A)("tabs__item",g.tabItem,a?.className,{"tabs__item--active":r===t}),children:n??t},t)}))})}function y(e){let{lazy:t,children:n,selectedValue:o}=e;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===o));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:a.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==o})))})}function j(e){const t=f(e);return(0,v.jsxs)("div",{className:(0,o.A)("tabs-container",g.tabList),children:[(0,v.jsx)(x,{...t,...e}),(0,v.jsx)(y,{...t,...e})]})}function w(e){const t=(0,b.A)();return(0,v.jsx)(j,{...e,children:u(e.children)},String(t))}},89236:(e,t,n)=>{n.d(t,{A:()=>a});var r=n(19365),o=(n(96540),n(74848));function a(e){return(0,o.jsx)(o.Fragment,{children:(0,o.jsx)(r.A,{className:"tw-rounded-md",...e})})}},27064:(e,t,n)=>{n.d(t,{A:()=>a});var r=n(11470),o=(n(96540),n(74848));function a(e){return(0,o.jsx)("div",{className:"tw-border tw-border-solid tw-border-skyblue tw-rounded-md tw-bg-darkslategray tw-p-4 tw-mb-4",children:(0,o.jsx)(r.A,{...e})})}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>l});var r=n(96540);const o={},a=r.createContext(o);function i(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);